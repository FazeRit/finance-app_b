generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String         @id @default(uuid())
  email          String         @unique
  hashedPassword String?        @map("hashed_password")
  createdAt      DateTime       @default(now()) @map("created_at")
  updatedAt      DateTime       @updatedAt @map("updated_at")

  expenses       Expense[]
  expenseLimits  ExpenseLimit[]

  @@map("users")
}

model Category {
  id           String         @id @default(uuid())
  name         String         @unique
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt

  Expense Expense[]
}

model Expense {
  id          String       @id @default(uuid())
  userId      String
  categoryId  String?
  amount      Float
  date        DateTime @default(now())
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  category Category? @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([categoryId])
  @@index([date])

  @@map("expenses")
}

model ExpenseLimit {
  id         String       @id @default(uuid())
  userId     String
  categoryId String      @unique
  limit      Float
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, categoryId])
  @@index([userId])
  @@index([categoryId])

  @@map("expense_limits")
}
